//
// data_node.cpp
// ~~~~~~~~~~~~~~~~~~~~~~
//
// Author: Joseph Adomatis
// Copyright (c) 2020 Joseph R Adomatis (joseph dot adomatis at gmail dot com)
//
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "../headers/erasmus_namespace.hpp"
#include "../headers/data_node.hpp"

using namespace erasmus;

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// global variable definitions
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// global function definitions
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// erasmus::dataNode member definitions
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////
// Constructor
///////////////////////////////////////////////////////////////////////////////

dataNode::dataNode()
{
    this->code = 0;
    this->weight = 0;
    this->hasKids = 0;
}

///////////////////////////////////////////////////////////////////////////////
// erasmus::dataNode::operator<
///////////////////////////////////////////////////////////////////////////////

bool dataNode::operator<(const erasmus::dataNode& rhs) const
{
    bool returnValue = (this->weight < rhs.weight || (this-> weight == rhs.weight && this->code > rhs.code));
    return(returnValue);
}

///////////////////////////////////////////////////////////////////////////////
// Deconstructor
///////////////////////////////////////////////////////////////////////////////

dataNode::~dataNode()
{

}